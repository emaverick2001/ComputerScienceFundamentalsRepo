install.packages('reshape2')
update.packages()
update.packages()
update.packages()
install.packages("tidyverse")
library(tidyverse)
#> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
#> ✔ ggplot2 3.4.0      ✔ purrr   0.3.5
#> ✔ tibble  3.1.8      ✔ dplyr   1.0.10
#> ✔ tidyr   1.2.1      ✔ stringr 1.4.1
#> ✔ readr   2.1.3      ✔ forcats 0.5.2
#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
#> ✖ dplyr::filter() masks stats::filter()
#> ✖ dplyr::lag()    masks stats::lag()
tidyverse_update()
install.packages(c("nycflights13", "gapminder", "Lahman"))
1 + 2
dput
dput(mtcars)
mtcars<-
q
ggplot2::mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
#> Warning: Using size for a discrete variable is not advised.
library(tidyverse)
as_tibble(iris)
#> # A tibble: 150 × 5
#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
#>          <dbl>       <dbl>        <dbl>       <dbl> <fct>
#> 1          5.1         3.5          1.4         0.2 setosa
#> 2          4.9         3            1.4         0.2 setosa
#> 3          4.7         3.2          1.3         0.2 setosa
#> 4          4.6         3.1          1.5         0.2 setosa
#> 5          5           3.6          1.4         0.2 setosa
#> 6          5.4         3.9          1.7         0.4 setosa
#> # … with 144 more rows
tibble(
x = 1:5,
y = 1,
z = x ^ 2 + y
)
#> # A tibble: 5 × 3
#>       x     y     z
#>   <int> <dbl> <dbl>
#> 1     1     1     2
#> 2     2     1     5
#> 3     3     1    10
#> 4     4     1    17
#> 5     5     1    26
as_tibble(iris)
tibble(x = 1:6, y = 2, z= x^2 + y)
my_variable <- 10
my_varıable
my_variable <- 10
my_variable
tribble(
~x, ~y, ~z,
#--|--|----
"a", 2, 3.6,
"b", 1, 8.5
)
nycflights13::flights %>%
print(n = 10, width = Inf)
nycflights13::flights %>%
View()
df <- tibble(
x = runif(5),
y = rnorm(5)
)
# Extract by name
df$x
#> [1] 0.73296674 0.23436542 0.66035540 0.03285612 0.46049161
df[["x"]]
#> [1] 0.73296674 0.23436542 0.66035540 0.03285612 0.46049161
# Extract by position
df[[1]]
#> [1] 0.73296674 0.23436542 0.66035540 0.03285612 0.46049161
mtcars
print(mtcars)
as_tibble(mtcars)
mtcars %>% View()
is_tibble(mtcars)
df <- data.frame(abc = 1, xyz = "a")
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
data()
billboard
data("billboard")
head(mtcars, 6)
head(billboard, 6)
mtcars
data("mtcars")
mtcars
head(mtcars, 10)
read_csv("a,b,c")
read_csv("a,b,c
1,2,3
4,5,6")
read("c1,c2,c3 +1,2,3+4,5,6")
read_csv("c1,c2,c3 +1,2,3+4,5,6")
read_csv("1,2,3\n4,5,6", col_names = FALSE)
read_csv("1,2,3\n4,5,6")
read_csv("x,y\n1,'a,b'"
)
read_csv("a,b\n1,2,3\n4,5,6")
read_csv("a,b,c\n1,2,3\n4,5,6")
read_csv("a;b\n1;3")
df = pd.read_csv('../input/top-spotify-songs-from-20102019-by-year/top10s.csv', encoding='latin-1')
help
setwd(/Users/maver/CPCR R/Data Harmonization Verified Files)
setwd("/Users/maver/CPCR R/Data Harmonization Verified Files")
pwd
library(data.table)
library(readxl)
library(purrr)
library(dplyr)
source('~/Desktop/CPCR-Repository/codebase/scoring/QA_Library.R')
source('~/Desktop/CPCR-Repository/codebase/scoring/CleaningScoringFunctions.R')
required.packages <- c("data.table","tidyverse", "readxl") #list packages used in script
new.packages <- required.packages[!(required.packages %in% installed.packages()[,"Package"])] #checks for new packages from required.packages
if(length(new.packages)) install.packages(new.packages) # installs any packages don't yet have
lapply(required.packages, require, character.only = TRUE) #load specified packages
##set work directory accordingly
setwd("~/Documents/CPCR/Data Harmonization Verified Files")
getwd
getwd()
library(data.table)
library(readxl)
library(purrr)
library(dplyr)
source('~/Desktop/CPCR-Repository/codebase/scoring/QA_Library.R')
source('~/Desktop/CPCR-Repository/codebase/scoring/CleaningScoringFunctions.R')
required.packages <- c("data.table","tidyverse", "readxl") #list packages used in script
new.packages <- required.packages[!(required.packages %in% installed.packages()[,"Package"])] #checks for new packages from required.packages
if(length(new.packages)) install.packages(new.packages) # installs any packages don't yet have
lapply(required.packages, require, character.only = TRUE) #load specified packages
##set work directory accordingly
setwd("~/Documents/CPCR/Data Harmonization Verified Files")
library(data.table)
library(readxl)
library(purrr)
library(dplyr)
source('~/Desktop/CPCR-Repository/codebase/scoring/QA_Library.R')
source('~/Desktop/CPCR-Repository/codebase/scoring/CleaningScoringFunctions.R')
required.packages <- c("data.table","tidyverse", "readxl") #list packages used in script
new.packages <- required.packages[!(required.packages %in% installed.packages()[,"Package"])] #checks for new packages from required.packages
if(length(new.packages)) install.packages(new.packages) # installs any packages don't yet have
lapply(required.packages, require, character.only = TRUE) #load specified packages
##set work directory accordingly
#setwd("~/Documents/CPCR/Data Harmonization Verified Files")
#****************************************************************************
# Inclusion of Self (IOS)
ios.0905.scoring <- function(data,keep.vars,ios){
keep.vars <- c('ID','date')
raw.colnames <- colnames(data)
if (missing(ios)){
ios <- paste0('IOS_', 1:5 )
}
raw.data <- data[,ios]
ios.scored <- rowSums(data[,ios])/(length(ios))
keeps <- data[,keep.vars]
output <- cbind(keeps, raw.data, ios.scored)
output <- as.data.frame(output)
return(output)
}
####################################################################
# NEO - 0905
####################################################################
#Sheet 1
neo_0905_s1 <- read_excel("0905/0905/0905 NEO 7-29-2014-SENT LINDA.xlsx", sheet = 1)
